<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Program 3</title><meta name="author" content="DELL"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 .s1 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s2 { color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s3 { color: #538DD3; font-family:"Times New Roman", serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 h1 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s4 { color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .p, p { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; margin:0pt; }
 .s5 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s7 { color: #F00; font-family:"Times New Roman", serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s8 { color: #006FC0; font-family:"Times New Roman", serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s9 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s10 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s11 { color: #006FC0; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 li {display: block; }
 #l1 {padding-left: 0pt;counter-reset: c1 3; }
 #l1> li>*:first-child:before {counter-increment: c1; content: counter(c1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l1> li:first-child>*:first-child:before {counter-increment: c1 0;  }
 #l2 {padding-left: 0pt;counter-reset: c2 1; }
 #l2> li>*:first-child:before {counter-increment: c2; content: counter(c1, decimal)"."counter(c2, decimal)" "; color: #F00; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: c2 0;  }
 #l3 {padding-left: 0pt;counter-reset: c3 1; }
 #l3> li>*:first-child:before {counter-increment: c3; content: counter(c3, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l3> li:first-child>*:first-child:before {counter-increment: c3 0;  }
 #l4 {padding-left: 0pt; }
 #l4> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l5 {padding-left: 0pt;counter-reset: d1 1; }
 #l5> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l5> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l6 {padding-left: 0pt; }
 #l6> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l7 {padding-left: 0pt; }
 #l7> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l8 {padding-left: 0pt;counter-reset: e1 1; }
 #l8> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 #l9 {padding-left: 0pt; }
 #l9> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l10 {padding-left: 0pt; }
 #l10> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l11 {padding-left: 0pt; }
 #l11> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l12 {padding-left: 0pt;counter-reset: f1 1; }
 #l12> li>*:first-child:before {counter-increment: f1; content: counter(f1, decimal)". "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l12> li:first-child>*:first-child:before {counter-increment: f1 0;  }
 #l13 {padding-left: 0pt; }
 #l13> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l14 {padding-left: 0pt; }
 #l14> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l15 {padding-left: 0pt;counter-reset: g1 1; }
 #l15> li>*:first-child:before {counter-increment: g1; content: counter(g1, decimal)". "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l15> li:first-child>*:first-child:before {counter-increment: g1 0;  }
 #l16 {padding-left: 0pt; }
 #l16> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l17 {padding-left: 0pt;counter-reset: h1 1; }
 #l17> li>*:first-child:before {counter-increment: h1; content: counter(h1, decimal)". "; color: black; font-family:"Times New Roman", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l17> li:first-child>*:first-child:before {counter-increment: h1 0;  }
 #l18 {padding-left: 0pt; }
 #l18> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l19 {padding-left: 0pt; }
 #l19> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l20 {padding-left: 0pt; }
 #l20> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l21 {padding-left: 0pt; }
 #l21> li>*:first-child:before {content: " "; color: black; font-family:Wingdings; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 #l22 {padding-left: 0pt;counter-reset: c3 1; }
 #l22> li>*:first-child:before {counter-increment: c3; content: counter(c3, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l22> li:first-child>*:first-child:before {counter-increment: c3 0;  }
 #l23 {padding-left: 0pt; }
 #l23> li>*:first-child:before {content: "o "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
</style></head><body><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><span class="s1" style=" background-color: #FF0;">Lab Component 3</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l1"><ol id="l2"><li data-list-text="3.1"><p class="s2" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">For student and course models created in Lab experiment for Module2, register admin interfaces, perform migrations and illustrate data entry through admin forms.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 1: Create Models</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l3"><li data-list-text="1."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Open Visual Studio Code<span class="s4">: Launch VS Code.</span></h1></li><li data-list-text="2."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Open Your Django Project<span class="s4">:</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l4"><li data-list-text=""><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Open the terminal in VS Code by navigating to <span class="p">View &gt; Terminal</span>.</p></li><li data-list-text=""><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 12pt;text-align: left;">Navigate to your project directory if not already there.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ul></li><li data-list-text="3."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Create Models<span class="s4">:</span></h1><p class="s4" style="padding-left: 59pt;text-indent: 0pt;text-align: left;"><span class="s5">o </span>In the VS Code file explorer, navigate to <span class="p">website_pages/models.py </span>and add the following code:</p><p style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 25pt;text-align: left;">from django.db import models class Student(models.Model):</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">first_name = models.CharField(max_length=100) last_name = models.CharField(max_length=100) email = models.EmailField()</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">enrolled_courses = models.ManyToManyField(&#39;Course&#39;, related_name=&#39;students&#39;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">def <u>&nbsp;</u>str<u> </u>(self):</p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;">return f&quot;{self.first_name} {self.last_name}&quot;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">class Course(models.Model):</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">name = models.CharField(max_length=100) description = models.TextField() start_date = models.DateField() end_date = models.DateField()</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 93pt;text-indent: -26pt;text-align: left;">def <u>&nbsp;</u>str<u> </u>(self): return self.name</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 2: Register Models in the Admin Interface</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">1. <b>Register Models</b>:</p><p class="s4" style="padding-left: 59pt;text-indent: 0pt;text-align: left;"><span class="s5">o </span>In the VS Code file explorer, navigate to <span class="p">website_pages/admin.py </span>and add the following code:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">from django.contrib import admin from .models import Student, Course</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">@admin.register(Student)</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">class StudentAdmin(admin.ModelAdmin):</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">list_display = (&#39;first_name&#39;, &#39;last_name&#39;, &#39;email&#39;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">@admin.register(Course)</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 12pt;text-align: left;">class CourseAdmin(admin.ModelAdmin):</p><p style="padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;">list_display = (&#39;name&#39;, &#39;start_date&#39;, &#39;end_date&#39;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 3: Perform Migrations</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l5"><li data-list-text="1."><h1 style="padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Make Migrations<span class="s4">:</span></h1><ul id="l6"><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;text-align: left;">In the VS Code terminal, run the following command to create new migrations based on the changes detected in your models:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 77pt;text-indent: 0pt;text-align: left;">python manage.py makemigrations</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ul></li><li data-list-text="2."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Apply Migrations<span class="s4">:</span></h1><ul id="l7"><li data-list-text="o"><p class="s4" style="padding-top: 3pt;padding-left: 77pt;text-indent: -18pt;text-align: left;">Apply the migrations to the database with:</p></li></ul></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 77pt;text-indent: 0pt;text-align: left;">python manage.py migrate</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 4: Access the Admin Interface</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l8"><li data-list-text="1."><h1 style="padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Create a Superuser<span class="s4">:</span></h1><ul id="l9"><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">In the VS Code terminal, run the following command to create a superuser:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 77pt;text-indent: 0pt;text-align: left;">python manage.py createsuperuser</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Follow the prompts to set up the superuser credentials.</p></li></ul></li><li data-list-text="2."><h1 style="padding-left: 41pt;text-indent: -18pt;line-height: 12pt;text-align: left;">Run the Development Server<span class="s4">:</span></h1><ul id="l10"><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;text-align: left;">Start the Django development server with:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 77pt;text-indent: 0pt;text-align: left;">python manage.py runserver</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ul></li><li data-list-text="3."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Login to the Admin Interface<span class="s4">:</span></h1><ul id="l11"><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Open a web browser and navigate to <span class="p">http://127.0.0.1:8000/admin</span>.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Log in using the superuser credentials you created.</p></li></ul></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 5: Data Entry Through Admin Forms</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l12"><li data-list-text="1."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Add Courses<span class="s4">:</span></h1><ul id="l13"><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">In the admin interface, click on the <span class="p">Courses </span>link.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Click on the &quot;Add Course&quot; button.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Fill out the form with course details and click &quot;Save&quot;.</p></li></ul></li><li data-list-text="2."><h1 style="padding-left: 41pt;text-indent: -18pt;line-height: 12pt;text-align: left;">Add Students<span class="s4">:</span></h1><ul id="l14"><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">In the admin interface, click on the <span class="p">Students </span>link.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Click on the &quot;Add Student&quot; button.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Fill out the form with student details.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Select courses the student is enrolled in using the multi-select field.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Click &quot;Save&quot;.</p></li></ul></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s3" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 6: Verify Data</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l15"><li data-list-text="1."><h1 style="padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Students and Courses List<span class="s4">:</span></h1><ul id="l16"><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">After saving, you will be redirected to the list view for the model.</p></li><li data-list-text="o"><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Here you can see all entries and click on them to view or edit details.</p></li></ul></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Summary</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l17"><li data-list-text="1."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Models Definition<span class="s4">:</span></h1><ul id="l18"><li data-list-text=""><p class="s4" style="padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;">Defined <span class="p">Student </span>and <span class="p">Course </span>models in <span class="p">website_pages/models.py </span>with appropriate fields and relationships.</p></li></ul></li><li data-list-text="2."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Admin Registration<span class="s4">:</span></h1><ul id="l19"><li data-list-text=""><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Registered the models in the admin interface in <span class="p">website_pages/admin.py</span>.</p></li></ul></li><li data-list-text="3."><h1 style="padding-left: 41pt;text-indent: -18pt;line-height: 12pt;text-align: left;">Migrations<span class="s4">:</span></h1><ul id="l20"><li data-list-text=""><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Created and applied migrations to update the database schema.</p></li></ul></li><li data-list-text="4."><h1 style="padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;">Admin Interface<span class="s4">:</span></h1><ul id="l21"><li data-list-text=""><p class="s4" style="padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;">Used the Django admin interface to enter data for <span class="p">Student </span>and <span class="p">Course</span>.</p></li></ul></li></ol><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">This allows you to manage <span class="p">Student </span>and <span class="p">Course </span>entries via the Django admin interface efficiently. You can now create, read, update, and delete student and course records using the Django admin panel.</p></li></ol></li><li data-list-text="3.2"><p class="s2" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Develop a Model form for student that contains his topic chosen for project, languages used and duration with a model called project</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 1: Define Models</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">First, define the models for <span class="p">Student </span>and <span class="p">Project </span>in <span class="p">models.py</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l22"><li data-list-text="1."><p class="s4" style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><b>Open </b><span class="s9">models.py </span>in your Django app (<span class="p">website_pages </span>assumed).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"># website_pages/models.py</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 25pt;text-align: left;">from django.db import models class Project(models.Model):</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">title = models.CharField(max_length=200) languages_used = models.CharField(max_length=100)</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">duration = models.IntegerField(help_text=&quot;Duration in weeks&quot;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 93pt;text-indent: -26pt;text-align: left;">def <u>&nbsp;</u>str<u> </u>(self): return self.title</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">class Student(models.Model):</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">first_name = models.CharField(max_length=100) last_name = models.CharField(max_length=100) email = models.EmailField()</p><p style="padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;">project_topic = models.CharField(max_length=200)</p><p style="padding-left: 41pt;text-indent: 26pt;text-align: left;">project = models.ForeignKey(Project, on_delete=models.CASCADE, related_name=&#39;students&#39;)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">def <u>&nbsp;</u>str<u> </u>(self):</p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;">return f&quot;{self.first_name} {self.last_name}&quot;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 2: Create a ModelForm</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Next, create a model form (<span class="p">StudentForm</span>) in <span class="p">forms.py </span>that allows you to input details for a student including their project topic and related project details.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="2."><p class="s4" style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><b>Create </b><span class="s9">forms.py </span>in the same app directory (<span class="p">website_pages</span>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"># website_pages/forms.py</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">from django import forms from .models import Student</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 67pt;text-indent: -26pt;text-align: left;">class StudentForm(forms.ModelForm): class Meta:</p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;">model = Student</p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;">fields = [&#39;first_name&#39;, &#39;last_name&#39;, &#39;email&#39;, &#39;project_topic&#39;, &#39;project&#39;]</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">In this form:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l23"><li data-list-text="o"><p style="padding-left: 77pt;text-indent: -18pt;text-align: left;">project_topic <span class="s10">field is directly included from the </span>Student <span class="s10">model.</span></p></li><li data-list-text="o"><p style="padding-left: 77pt;text-indent: -18pt;text-align: left;">project <span class="s10">field is a ForeignKey field to relate a student with a project.</span></p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 3: Register Models in Admin (Optional)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Register the <span class="p">Student </span>and <span class="p">Project </span>models in <span class="p">admin.py </span>for convenient data entry via the Django admin interface.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="3."><p class="s4" style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><b>Open </b><span class="s9">admin.py </span>in your app (<span class="p">website_pages</span>).</p><p style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"># website_pages/admin.py</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">from django.contrib import admin from .models import Student, Project</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">admin.site.register(Student) admin.site.register(Project)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 4: Perform Migrations and Apply Changes</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Ensure all changes to models (<span class="p">Student </span>and <span class="p">Project</span>) and forms (<span class="p">StudentForm</span>) are reflected in the database.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="4."><p class="s8" style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Run the following commands <span class="s11">in the terminal of VS Code:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">python manage.py makemigrations python manage.py migrate</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">These commands will create migration files based on the changes made to the models and apply those changes to your database.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 5: Use the ModelForm in Views</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Integrate the <span class="p">StudentForm </span>into your views (<span class="p">views.py</span>) for data input and manipulation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="5."><h1 style="padding-left: 41pt;text-indent: -18pt;text-align: left;">Use <span class="s9">StudentForm </span>in views <span class="s4">(</span><span class="p">views.py</span><span class="s4">):</span></h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"># website_pages/views.py</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">from django.shortcuts import render, redirect from .forms import StudentForm</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">def create_student(request):</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">if request.method == &#39;POST&#39;:</p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;">form = StudentForm(request.POST) if form.is_valid():</p><p style="padding-left: 120pt;text-indent: 0pt;line-height: 12pt;text-align: left;">form.save()</p><p style="padding-left: 120pt;text-indent: 0pt;line-height: 12pt;text-align: left;">return redirect(&#39;home&#39;) # Replace &#39;home&#39; with your desired redirect</p><p style="text-indent: 0pt;text-align: right;">URL</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 4pt;text-indent: 0pt;text-align: left;">else:</p><p style="padding-left: 30pt;text-indent: 0pt;text-align: left;">form = StudentForm()</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 4pt;text-indent: 0pt;text-align: left;">return render(request, &#39;website_pages/student_form.html&#39;, {&#39;form&#39;: form})</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Here, <span class="p">create_student </span>is a view function that handles the form submission and saves a new student record.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 6: Create HTML Template</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Create an HTML template (<span class="p">student_form.html</span>) to render the form and collect data from the user.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="6."><p class="s4" style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><b>Create </b><span class="s9">student_form.html </span>in <span class="p">templates/website_pages/</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;!-- website_pages/templates/website_pages/student_form.html --&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;!DOCTYPE html&gt;</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;html lang=&quot;en&quot;&gt;</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;head&gt;</p><p style="padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;">&lt;meta charset=&quot;UTF-8&quot;&gt;</p><p style="padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">&lt;title&gt;Create Student&lt;/title&gt;</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;/head&gt;</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;body&gt;</p><p style="padding-top: 4pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">&lt;h1&gt;Create Student&lt;/h1&gt;</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">&lt;form method=&quot;post&quot;&gt;</p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;">{% csrf_token %}</p><p style="padding-left: 93pt;text-indent: 0pt;line-height: 12pt;text-align: left;">{{ form.as_p }}</p><p style="padding-left: 93pt;text-indent: 0pt;line-height: 12pt;text-align: left;">&lt;button type=&quot;submit&quot;&gt;Save&lt;/button&gt;</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">&lt;/form&gt;</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;/body&gt;</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">&lt;/html&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">This template renders the <span class="p">StudentForm </span>fields (<span class="p">first_name</span>, <span class="p">last_name</span>, <span class="p">email</span>, <span class="p">project_topic</span>, <span class="p">project</span>) and includes a submit button to save the form data.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 7: Include URLs</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Include URLs for the view function (<span class="p">create_student</span>) in your <span class="p">urls.py </span>to access the form.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li data-list-text="7."><p class="s4" style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><b>Update </b><span class="s9">urls.py </span>in your app (<span class="p">website_pages</span>):</p></li></ol></li></ol></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"># website_pages/urls.py</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">from django.urls import path from . import views</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">urlpatterns = [</p><p style="padding-left: 67pt;text-indent: 0pt;text-align: left;">path(&#39;create_student/&#39;, views.create_student, name=&#39;create_student&#39;), # Add other URLs as needed</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">]</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">This sets up a URL pattern (<span class="p">create_student/</span>) that maps to the <span class="p">create_student </span>view function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Step 8: Test and Verify</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Test the form by navigating to the URL (<span class="p">http://127.0.0.1:8000/create_student/</span>) in your browser and filling out the form fields.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">Summary</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-left: 5pt;text-indent: 0pt;line-height: 146%;text-align: justify;">We have successfully created a Django model form (<span class="p">StudentForm</span>) that includes fields related to a chosen project (<span class="p">Project </span>model) in Visual Studio Code. This setup allows you to easily create and manage student records along with their project details through the Django admin interface or custom views.</p></body></html>
